points(CI$lower, col = "red")
points(CI$upper, col = "blue")
abline(h = 4, col = "black")
legend("topright", legend=c("Upper","Lower"),col=c("blue","red"), pch = c(1,1),cex=0.8)
plot(CI$esti, xlab = "Combinations", ylab = "Estimates", ylim = c(-10,10))
points(CI$lower, col = "red")
points(CI$upper, col = "blue")
plot(CI$esti, xlab = "Combinations", ylab = "Estimates", ylim = c(-10,10))
points(CI$lower, col = "red")
points(CI$upper, col = "blue")
abline(h = 4, col = "black")
legend("topright", legend=c("upper bound","lower bound"),col=c("blue","red"), pch = c(1,1),cex=0.8)
glist
set.seed(5)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(0.5,5,1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 2,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
View(coverage_all)
set.seed(5)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(0.5,5,1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
set.seed(5)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(1,10,1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
plot(hlist,coverage_all$cover[1:length(hlist)],type = "n",pch = 1, ylab = "Coverage Probability", main = "(h,g) and Coverage Probability", ylim = c(0.3,1))
for(i in 1:length(glist)){
lines(hlist,coverage_all$cover[(1+(i-1)*length(hlist)):(i*length(hlist))], col = i, pch = i ,type = "b")
}
legend("bottomleft", legend = glist,col=1:length(hlist), pch = 1:length(hlist),cex=0.8)
abline(h = 0.95, col = "black")
set.seed(8)
rounds <- 100
para$h <- 0.3 # result_hy$h[HY_opt]
para$g <- 6 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
plot(coverage$lower, xlab = "Combinations", ylab = "Estimates",col="red", ylim = c(0,10))
points(coverage$upper, col = "blue")
lines(coverage$esti, lty = 2)
abline(h = 4, col = "black")
legend("topright", legend=c("Upper","Lower"),col=c("blue","red"), pch = c(1,1),cex=0.8)
plot(coverage$lower, xlab = "Combinations", ylab = "Estimates",col="red", ylim = c(0,10))
points(coverage$upper, col = "blue")
lines(coverage$esti, lty = 2)
abline(h = 4, col = "black")
legend("topright", legend=c("upper bound","lower bound"),col=c("blue","red"), pch = c(1,1),cex=0.8)
para
set.seed(20)
para <- paraset_g(64,10/19,rk$value, muk$value)
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
set.seed(8)
rounds <- 100
para$h <- 0.1 # result_hy$h[HY_opt]
para$g <- 0.3 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
plot(coverage$lower, xlab = "Combinations", ylab = "Estimates",col="red", ylim = c(0,10))
points(coverage$upper, col = "blue")
lines(coverage$esti, lty = 2)
abline(h = 4, col = "black")
legend("topright", legend=c("upper bound","lower bound"),col=c("blue","red"), pch = c(1,1),cex=0.8)
para
set.seed(5)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(1,10,1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
set.seed(5)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
set.seed(6)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
plot(coverage$lower, xlab = "Combinations", ylab = "Estimates",col="red", ylim = c(0,10))
points(coverage$upper, col = "blue")
lines(coverage$esti, lty = 2)
abline(h = 4, col = "black")
legend("topright", legend=c("upper bound","lower bound"),col=c("blue","red"), pch = c(1,1),cex=0.8)
set.seed(20)
para <- paraset_g(128,10/19,rk$value, muk$value)
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
set.seed(10)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
set.seed(10)
rounds <- 100
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
coverage_all <- data.frame()
cover <- 1:rounds
for(i in 1:length(hlist)){
para$h <- hlist[i]
for(j in 1:length(glist)){
para$g <- glist[j]
for(ep in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
temp <- CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value)
cover[ep] <- (temp$lower <= test$Y)*(temp$upper >= test$Y)
}
coverage_all <- rbind(coverage_all,data.frame(h = para$h, g = para$g, cover = mean(cover, na.rm = T)))
}
}
View(coverage_all)
set.seed(8)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
plot(coverage$lower, xlab = "Combinations", ylab = "Estimates",col="red", ylim = c(0,10))
points(coverage$upper, col = "blue")
lines(coverage$esti, lty = 2)
abline(h = 4, col = "black")
legend("topright", legend=c("upper bound","lower bound"),col=c("blue","red"), pch = c(1,1),cex=0.8)
set.seed(20)
para <- paraset_g(512,10/19,rk$value, muk$value)
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
hlist <- seq(0.1,1,0.1)
glist <- 1/(seq(1.1,0.2,-0.1))
CI <- data.frame()
for(i in hlist){
para$h <- i
for(j in glist){
para$g <- j
CI <- rbind(CI,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
}
plot(CI$esti, xlab = "Combinations", ylab = "Estimates", ylim = c(-10,10))
points(CI$lower, col = "red")
points(CI$upper, col = "blue")
abline(h = 4, col = "black")
legend("topright", legend=c("upper bound","lower bound"),col=c("blue","red"), pch = c(1,1),cex=0.8)
View(coverage)
set.seed(8)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(8)
rounds <- 100
para$h <- 0.6 # result_hy$h[HY_opt]
para$g <- 0.3 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
library(ggplot2)
ggplot(data = coverage_all,aes(h,g))
ggplot(data = coverage) +
geom_smooth(mapping = aes(y = esti, linetype = drv))
ggplot(data = coverage) +
geom_smooth(mapping = aes(y = esti))
ggplot(data = coverage) +
geom_smooth(mapping = aes(x = (1:rounds),y = esti))
simulation <- 1:rounds
ggplot(data = coverage) +
geom_line(mapping = aes(x = simulation,y = esti))+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3))
ggplot(data = coverage) +
geom_line(mapping = aes(x = simulation,y = esti)+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3))
ggplot(data = coverage) +
geom_line(mapping = aes(x = simulation,y = esti)+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3))
ggplot(data = coverage) +
geom_line(mapping = aes(x = simulation,y = esti))+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3)
?geom_ribbon
ggplot(data = coverage,aes(x = simulation,y = esti)) +
geom_line()+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3)
para
set.seed(20)
para <- paraset_g(32,10/19,rk$value, muk$value)
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
set.seed(8)
rounds <- 100
para$h <- 0.3 # result_hy$h[HY_opt]
para$g <- 6 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(8)
rounds <- 100
para$h <- 0.3 # result_hy$h[HY_opt]
para$g <- 6 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
ggplot(data = coverage,aes(x = simulation,y = esti)) +
geom_line()+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3)
?geom_abline
ggplot(data = coverage,aes(x = simulation,y = esti)) +
geom_line()+
geom_hline(yintercept = 4)+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3)
para <- paraset_g(64,10/19,rk$value, muk$value)
set.seed(8)
rounds <- 100
para$h <- 0.1 # result_hy$h[HY_opt]
para$g <- 0.3 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(9)
rounds <- 100
para$h <- 0.1 # result_hy$h[HY_opt]
para$g <- 0.3 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
ggplot(data = coverage,aes(x = simulation,y = esti)) +
geom_line()+
geom_hline(yintercept = 4)+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3)
para <- paraset_g(128,10/19,rk$value, muk$value)
set.seed(9)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(10)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(10)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(7)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(11)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
set.seed(11)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(12)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
set.seed(12)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
set.seed(10)
rounds <- 100
para$h <- 0.25 # result_hy$h[HY_opt]
para$g <- 0.5 # result_hy$g[HY_opt]
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
coverage <- rbind(coverage,CI_1(adjust = 1,0.95,para,train_label,train_un,test,sigmaep,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
ggplot(data = coverage,aes(x = simulation,y = esti)) +
geom_line()+
geom_hline(yintercept = 4)+
geom_ribbon(aes(ymin=lower,ymax=upper),alpha=0.3)
