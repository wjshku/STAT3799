record_nw <- matrix(nrow = length(hlist), ncol = rounds)#
record_hy <- matrix(nrow = length(hlist)*length(glist), ncol = rounds)#
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
#test <- data[-sample,]
test <- data.frame(X = 2, Y = mx(2))
result_nw <- data.frame()
for(i in 1:length(hlist)){
#h <- hlist[i]*para$h
h <- hlist[i]
MSE_NW <- nw_simu(train_label, test, para$n,h, k)$MSE
result_nw <- rbind(result_nw, data.frame(mMSE_NW = MSE_NW, h))
}
record_nw[,exp] <- result_nw$mMSE_NW #
mMSE_NW <- mMSE_NW + result_nw$mMSE_NW
result_hy <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
h <- hlist[i]
g <- glist[j]
para$lambda <- 1 + h^2/g^2
nw_res <- nw_simu(train_label, test, para$n,h, k)
ss_res <- ss_simu(train_label, train_un, test, para$n,h, para$m,g, k)
hy_res <- hy_simu(test, para$lambda, nw_res$esti$esti_nw, ss_res$esti$esti_ss)
result_hy <- rbind(result_hy, data.frame(mMSE_HY = hy_res$MSE, h, g))
}
}
record_hy[,exp] <- result_hy$mMSE_HY#
mMSE_HY <- mMSE_HY + result_hy$mMSE_HY
}
result_nw$mMSE_NW <- mMSE_NW/rounds
result_hy$mMSE_HY <- mMSE_HY/rounds
min(result_nw$mMSE_NW,na.rm = TRUE)
min(result_hy$mMSE_HY,na.rm = TRUE)
NW_opt <- match(min(result_nw$mMSE_NW,na.rm = TRUE),result_nw$mMSE_NW)
HY_opt <-match(min(result_hy$mMSE_HY,na.rm = TRUE),result_hy$mMSE_HY)
plot(mMSE_NW~h,data = result_nw,col = "blue",main = str_c("h = ",result_nw$h[NW_opt]))
g_main <- str_c("g = ",result_hy$g[HY_opt])
h_main <- str_c("h = ",result_hy$h[HY_opt])
plot(mMSE_HY~h,type = "b",data = filter(result_hy, g == result_hy$g[HY_opt]),main = g_main)
plot(mMSE_HY~g,type = "b",data = filter(result_hy, h == result_hy$h[HY_opt]),main = h_main)
plot(mMSE_HY~h,data = filter(result_hy, g == result_hy$g[HY_opt]), type="b", pch=19, col="red", xlab="h", ylab="MSE",main = g_main)
# Add a line
lines(mMSE_NW~h,data = result_nw, pch=18, col="blue", type="b", lty=2)
# Add a legend
legend("topright", legend=c("MSE_HY", "MSE_NW"),col=c("red", "blue"), lty=1:2, cex=0.8)
result_hy$group <- cut(result_hy$mMSE_HY, breaks=c(quantile(result_hy$mMSE_HY, probs = seq(0, 1, by = 0.20))),include.lowest = T)
heatmap1 <- ggplot(result_hy, aes(h, g,fill = group))
heatmap1 + geom_tile()+
scale_fill_manual(breaks = levels(result_hy$group),
values = c("#86ebc9", "#869ceb",
"#b986eb","#a1eb86","#09855c"))
result_hy$group <- cut(result_hy$mMSE_HY, breaks=c(quantile(result_hy$mMSE_HY, probs = seq(0, 1, by = 0.20))),include.lowest = T)
heatmap1 <- ggplot(result_hy, aes(h, g,fill = group))
heatmap1 + geom_tile()+
scale_fill_manual(breaks = levels(result_hy$group),
values = c("#86ebc9", "#869ceb",
"#b986eb","#a1eb86","#09855c"))
set.seed(50)
data <- simu_norm(para$n + para$m, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
rounds <- 100
hlist <- seq(0.2,2,0.2)
glist <- seq(1,10,1)
mMSE_NW <- 0
mMSE_HY <- 0
set.seed(43)
record_nw <- matrix(nrow = length(hlist), ncol = rounds)#
record_hy <- matrix(nrow = length(hlist)*length(glist), ncol = rounds)#
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
#test <- data[-sample,]
test <- data.frame(X = 2, Y = mx(2))
result_nw <- data.frame()
for(i in 1:length(hlist)){
#h <- hlist[i]*para$h
h <- hlist[i]
MSE_NW <- nw_simu(data, test, para$n,h, k)$MSE
result_nw <- rbind(result_nw, data.frame(mMSE_NW = MSE_NW, h))
}
record_nw[,exp] <- result_nw$mMSE_NW #
mMSE_NW <- mMSE_NW + result_nw$mMSE_NW
result_hy <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
h <- hlist[i]
g <- glist[j]
para$lambda <- 1 + h^2/g^2
nw_res <- nw_simu(train_label, test, para$n,h, k)
ss_res <- ss_simu(train_label, train_un, test, para$n,h, para$m,g, k)
hy_res <- hy_simu(test, para$lambda, nw_res$esti$esti_nw, ss_res$esti$esti_ss)
result_hy <- rbind(result_hy, data.frame(mMSE_HY = hy_res$MSE, h, g))
}
}
record_hy[,exp] <- result_hy$mMSE_HY#
mMSE_HY <- mMSE_HY + result_hy$mMSE_HY
}
result_nw$mMSE_NW <- mMSE_NW/rounds
result_hy$mMSE_HY <- mMSE_HY/rounds
min(result_nw$mMSE_NW,na.rm = TRUE)
min(result_hy$mMSE_HY,na.rm = TRUE)
NW_opt <- match(min(result_nw$mMSE_NW,na.rm = TRUE),result_nw$mMSE_NW)
HY_opt <-match(min(result_hy$mMSE_HY,na.rm = TRUE),result_hy$mMSE_HY)
plot(mMSE_NW~h,data = result_nw,col = "blue",main = str_c("h = ",result_nw$h[NW_opt]))
g_main <- str_c("g = ",result_hy$g[HY_opt])
h_main <- str_c("h = ",result_hy$h[HY_opt])
plot(mMSE_HY~h,type = "b",data = filter(result_hy, g == result_hy$g[HY_opt]),main = g_main)
plot(mMSE_HY~g,type = "b",data = filter(result_hy, h == result_hy$h[HY_opt]),main = h_main)
plot(mMSE_HY~h,data = filter(result_hy, g == result_hy$g[HY_opt]), type="b", pch=19, col="red", xlab="h", ylab="MSE",main = g_main)
# Add a line
lines(mMSE_NW~h,data = result_nw, pch=18, col="blue", type="b", lty=2)
# Add a legend
legend("topright", legend=c("MSE_HY", "MSE_NW"),col=c("red", "blue"), lty=1:2, cex=0.8)
rounds <- 100
hlist <- seq(0.2,2,0.2)
glist <- seq(1,10,1)
mMSE_NW <- 0
mMSE_HY <- 0
set.seed(20)
record_nw <- matrix(nrow = length(hlist), ncol = rounds)#
record_hy <- matrix(nrow = length(hlist)*length(glist), ncol = rounds)#
for(exp in 1:rounds){
data <- simu_norm(para$m + para$n, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
#test <- data[-sample,]
test <- data.frame(X = 2, Y = mx(2))
result_nw <- data.frame()
for(i in 1:length(hlist)){
h <- hlist[i]*para$h
MSE_NW <- nw_simu(train_label, test, para$n,h, k)$MSE
result_nw <- rbind(result_nw, data.frame(mMSE_NW = MSE_NW, h))
}
record_nw[,exp] <- result_nw$mMSE_NW #
mMSE_NW <- mMSE_NW + result_nw$mMSE_NW
result_hy <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
h <- hlist[i]*para$h
g <- glist[j]*para$g
para$lambda <- 1 + h^2/g^2
nw_res <- nw_simu(train_label, test, para$n,h, k)
ss_res <- ss_simu(train_label, train_un, test, para$n,h, para$m,g, k)
hy_res <- hy_simu(test, para$lambda, nw_res$esti$esti_nw, ss_res$esti$esti_ss)
result_hy <- rbind(result_hy, data.frame(mMSE_HY = hy_res$MSE, h, g))
}
}
record_hy[,exp] <- result_hy$mMSE_HY#
mMSE_HY <- mMSE_HY + result_hy$mMSE_HY
}
result_nw$mMSE_NW <- mMSE_NW/rounds
result_hy$mMSE_HY <- mMSE_HY/rounds
min(result_nw$mMSE_NW,na.rm = TRUE)
min(result_hy$mMSE_HY,na.rm = TRUE)
NW_opt <- match(min(result_nw$mMSE_NW,na.rm = TRUE),result_nw$mMSE_NW)
HY_opt <-match(min(result_hy$mMSE_HY,na.rm = TRUE),result_hy$mMSE_HY)
plot(mMSE_NW~h,data = result_nw,col = "blue",main = str_c("h = ",result_nw$h[NW_opt]))
g_main <- str_c("g = ",result_hy$g[HY_opt])
h_main <- str_c("h = ",result_hy$h[HY_opt])
plot(mMSE_HY~h,type = "b",data = filter(result_hy, g == result_hy$g[HY_opt]),main = g_main)
plot(mMSE_HY~g,type = "b",data = filter(result_hy, h == result_hy$h[HY_opt]),main = h_main)
plot(mMSE_HY~h,data = filter(result_hy, g == result_hy$g[HY_opt]), type="b", pch=19, col="red", xlab="h", ylab="MSE",main = g_main)
# Add a line
lines(mMSE_NW~h,data = result_nw, pch=18, col="blue", type="b", lty=2)
# Add a legend
legend("topright", legend=c("MSE_HY", "MSE_NW"),col=c("red", "blue"), lty=1:2, cex=0.8)
result_hy$group <- cut(result_hy$mMSE_HY, breaks=c(quantile(result_hy$mMSE_HY, probs = seq(0, 1, by = 0.20))),include.lowest = T)
heatmap1 <- ggplot(result_hy, aes(h, g,fill = group))
heatmap1 + geom_tile()+
scale_fill_manual(breaks = levels(result_hy$group),
values = c("#86ebc9", "#869ceb",
"#b986eb","#a1eb86","#09855c"))
set.seed(30)
para <- paraset_g(32,10/19,rk$value, muk$value)
data <- simu_norm(para$n + para$m, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
data
set.seed(10)
rounds <- 100
coverage <- data.frame()
for(i in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para <- paraset_g(para$n,10/19,rk$value, muk$value)
para$g <- (8*pi^(1/2)/3)^(1/5)*sd(train_label$X)*(rk$value/muk$value^2/para$m)^(1/5)
sigmaep_esti <- sqrt(esti_error(para,train_label))
para$h <- h_opt_esti(para,train_label,train_un,test,sigmaep_esti,rk,sigmak)
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
for(k in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
}
k
k <- function(x) 1/sqrt(2*pi)*exp(-0.5*(x-0)^2)
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
mean(coverage$cover,na.rm = T)
}
i
View(result_nw)
set.seed(10)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
rounds <- 100
coverage <- data.frame()
result_ci <- data.frame()
for(i in hlist){
for(j in glist){
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
}
cover_prop <- mean(coverage$cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
}
}
CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value)
set.seed(10)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
rounds <- 100
coverage <- data.frame()
result_ci <- data.frame()
for(i in hlist){
for(j in glist){
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
sigmaep_esti <- sqrt(esti_error(para,train_label))
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
cover_prop <- mean(coverage$cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
}
}
data.frame(h = para$h, g = para$g, cover_prop)
rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
mean(coverage$cover,na.rm = T)
set.seed(10)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
rounds <- 100
coverage <- data.frame()
result_ci <- data.frame()
for(i in hlist){
for(j in glist){
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
sigmaep_esti <- sqrt(esti_error(para,train_label))
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
cover_prop <- mean(coverage$cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
}
}
result_ci
i
j
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
sigmaep_esti <- sqrt(esti_error(para,train_label))
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value)
set.seed(10)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
rounds <- 100
coverage <- data.frame()
result_ci <- data.frame()
for(i in hlist){
for(j in glist){
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
sigmaep_esti <- sqrt(esti_error(para,train_label))
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
cover_prop <- mean(cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
}
}
result_ci
cover
(coverage$lower <= test$Y)*(coverage$upper >= test$Y)
set.seed(10)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
rounds <- 100
coverage <- data.frame()
result_ci <- data.frame()
for(i in hlist){
for(j in glist){
coverage <- data.frame()
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
sigmaep_esti <- sqrt(esti_error(para,train_label))
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
cover_prop <- mean(cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
}
}
result_ci
heatmap4 <- ggplot(result_ci, aes(h, g, fill = cover_prop))
heatmap4 + geom_tile()
para
result_ci$cover_prop - 0.95
abs(result_ci$cover_prop - 0.95)
heatmap4 <- ggplot(result_ci, aes(h, g, fill = abs(result_ci$cover_prop - 0.95)))
heatmap4 + geom_tile()
rm(record_hy,record_nw)
result_ci$error <- abs(result_ci$cover_prop - 0.95)
heatmap4 <- ggplot(result_ci, aes(h, g, fill = error))
heatmap4 + geom_tile()
View(result_ci)
HY_opt
result_hy$g[HY_opt]
result_hy$h[HY_opt]
para
sigmax
set.seed(30)
para <- paraset_g(64,10/19,rk$value, muk$value)
data <- simu_norm(para$n + para$m, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
set.seed(10)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,2,0.1)
rounds <- 100
coverage <- data.frame()
result_ci <- data.frame()
for(i in hlist){
for(j in glist){
coverage <- data.frame()
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
sigmaep_esti <- sqrt(esti_error(para,train_label))
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
cover_prop <- mean(cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
}
}
result_ci$error <- abs(result_ci$cover_prop - 0.95)
heatmap4 <- ggplot(result_ci, aes(h, g, fill = error))
heatmap4 + geom_tile()
min(result_ci$error)
filter(result_ci$error == 0.02)
filter(result_ci,error == 0.02)
filter(result_ci,result_ci$error == 0.02)
?filter
filter(result_ci,error == 0.02)
filter(result_ci,error == min(result_ci$error))
set.seed(10)
hlist <- seq(0.1,1,0.1)
glist <- seq(0.1,1,0.1)
rounds <- 200
coverage <- data.frame()
result_ci <- data.frame()
for(i in hlist){
for(j in glist){
coverage <- data.frame()
for(exp in 1:rounds){
sample <- sample.int(n = nrow(data), size = para$n, replace = T)
train_label <- data[sample,]
train_un <- data[-sample,]
para$h <- i
para$g <- j
sigmaep_esti <- sqrt(esti_error(para,train_label))
coverage <- rbind(coverage,CI(adjust = 1,0.95,para,train_label,train_un,test,sigmaep_esti,rk$value,sigmak$value))
}
cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
cover_prop <- mean(cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop))
}
}
result_ci$error <- abs(result_ci$cover_prop - 0.95)
heatmap4 <- ggplot(result_ci, aes(h, g, fill = error))
heatmap4 + geom_tile()
filter(result_ci,error == min(result_ci$error))
para
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$m+para$n),]
para$g <- (8*pi^(1/2)/3)^(1/5)*sd(train_label$X)*(rk$value/muk$value^2/para$m)^(1/5)
sigmaep_esti <- sqrt(esti_error(para,train_label))
h_opt <- h_opt_esti(para,train_label,train_un,test,sigmaep_esti,rk,sigmak);h_opt
para
nw_simu(data[1:para$n,],data$X[-(1:para$n),],para$n,para$h,k)
data$X[-(1:para$n)]
nw_simu(data[1:para$n,],data$X[-(1:para$n)],para$n,para$h,k)
nw_simu(data[1:para$n,],data[-(1:para$n),],para$n,para$h,k)
labeled <- nw_simu(data[1:para$n,],data,para$n,para$h,k)
labeled - data
labeled <- nw_simu(data[1:para$n,],data,para$n,para$h,k)$esti
names(labeled) <- c("X","Y")
unlabeled <- data
labeled$Y - data$Y
error <- labeled$Y - data$Y
hist(error)
para
sample(unlabeled, para$m, replace = T)
para$m
unlabeled[sample(nrow(df), para$m,replace = T),]
unlabeled[sample(1:nrow(df), para$m,replace = T),]
unlabeled[sample(1:nrow(unlabel), para$m,replace = T),]
unlabeled[sample(1:nrow(unlabeled), para$m,replace = T),]
unlabled
unlabeled
labeled[sample(1:nrow(labeled), para$n,replace = T),]
train_label <- labeled[sample(1:nrow(labeled), para$n,replace = T),]
train_un <- unlabeled[sample(1:nrow(unlabeled), para$m,replace = T),]
train_label$Y <- train_label$Y + error[sample(1:nrow(error), para$n,replace = T),]
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T),]
length(error)
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
plot(train_label$X,train_label$Y)
plot(data$X,data$Y)
train_label <- labeled[sample(1:nrow(labeled), para$n,replace = T),]
train_un <- unlabeled[sample(1:nrow(unlabeled), para$m,replace = T),]
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
plot(train_label$X,train_label$Y)
error
error[sample(1:length(error), para$n,replace = T)]
train_label <- labeled[sample(1:nrow(labeled), para$n,replace = T),]
train_un <- unlabeled[sample(1:nrow(unlabeled), para$m,replace = T),]
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
plot(train_label$X,train_label$Y)
train_label <- labeled[sample(1:nrow(labeled), para$n,replace = T),]
train_un <- unlabeled[sample(1:nrow(unlabeled), para$m,replace = T),]
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
plot(train_label$X,train_label$Y)
View(labeled)
plot(labeled$X,labeled$Y)
plot(data$X,data$Y)
lines(data$X,data$X^2)
plot(labeled$X,labeled$Y)
points(data$X,data$X^2)
para
para <- paraset_g(64,10/19,rk$value, muk$value)
para
labeled <- nw_simu(data[1:para$n,],data,para$n,para$h,k)$esti
names(labeled) <- c("X","Y")
unlabeled <- data
error <- labeled$Y - data$Y
plot(labeled$X,labeled$Y)
points(data$X,data$X^2)
(8*pi^(1/2)/3)^(1/5)*sd(train_label$X)*(rk$value/muk$value^2/para$n)^(1/5)
sd(train_label$X)
para
set.seed(30)
para <- paraset_g(64,10/19,rk$value, muk$value)
data <- simu_norm(para$n + para$m, 1, para$m, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
para$h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
para$g <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$m)^(1/5)
labeled <- nw_simu(data[1:para$n,],data,para$n,para$h,k)$esti
names(labeled) <- c("X","Y")
unlabeled <- data
error <- labeled$Y - data$Y
plot(labeled$X,labeled$Y)
points(data$X,data$X^2)
