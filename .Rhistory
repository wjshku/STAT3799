MC_hy$h <- result_hy$h
MC_hy$g <- result_hy$g
MC_hy
para <- paraset_g(32,1,rk$value, muk$value)
test <- data.frame(X = 1.5, Y = mx(1.5))
hlist <- seq(0.1,1,0.2)
glist <- seq(0.3,2.4,0.3)
epoch <- 10
rounds <- 10000
set.seed(10)
hlist <- c(0.3)
glist <- c(1.5)
record_hy <- matrix(nrow = length(hlist)*length(glist), ncol = epoch)
for(ep in 1:epoch){
mMSE_HY <- 0
for(r in 1:rounds){
train_label <- simu_norm(para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_un <- simu_norm(para$m, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
result_hy <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
h <- hlist[i]
g <- glist[j]
lambda <- 1 + h^2/g^2
nw_res <- nw_simu(train_label, test, para$n, h, k)
ss_res <- ss_simu(train_label, train_un, test, para$n,h, para$m,g, k)
hy_res <- hy_simu(test, lambda, nw_res$esti$esti_nw, ss_res$esti$esti_ss)
result_hy <- rbind(result_hy, data.frame(mMSE_HY = hy_res$MSE, h, g))
}
}
mMSE_HY <- mMSE_HY + result_hy$mMSE_HY
}
result_hy$mMSE_HY <- mMSE_HY/rounds
record_hy[,ep] <- result_hy$mMSE_HY
}
para <- paraset_g(128,10/19,rk$value, muk$value)
test <- data.frame(X = 1.5, Y = mx(1.5))
hlist <- seq(0.1,1,0.2)
glist <- seq(0.3,2.4,0.3)
epoch <- 10
rounds <- 10000
set.seed(100)
hlist <- c(0.2)
record_nw <- matrix(nrow = length(hlist), ncol = epoch)
for(ep in 1:epoch){
mMSE_NW <- 0
for(r in 1:rounds){
train_label <- simu_norm(para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_un <- simu_norm(para$m, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
#test <- data[-sample,]
#test <- data.frame(X = 2, Y = mx(2))
result_nw <- data.frame()
for(i in 1:length(hlist)){
h <- hlist[i]
MSE_NW <- nw_simu(train_label, test, para$n, h, k)$MSE
result_nw <- rbind(result_nw, data.frame(mMSE_NW = MSE_NW, h))
}
mMSE_NW <- mMSE_NW + result_nw$mMSE_NW
}
result_nw$mMSE_NW <- mMSE_NW/rounds
record_nw[,ep] <- result_nw$mMSE_NW
}
MCM_hy <- apply(record_hy,1,mean)
MCE_hy <- apply(record_hy,1,sd)
MC_hy <- data.frame(MCM = MCM_hy,MCE = MCE_hy,Lower = MCM_hy - MCE_hy,Upper = MCM_hy + MCE_hy)
MC_hy$h <- result_hy$h
MC_hy$g <- result_hy$g
MC_hy
MCM_nw <- apply(record_nw,1,mean)#MC mean
MCE_nw <- apply(record_nw,1,sd)#MC error
MC_nw <- data.frame(MCM = MCM_nw,MCE = MCE_nw,Lower = MCM_nw - MCE_nw,Upper = MCM_nw + MCE_nw)
MC_nw$h <- result_nw$h
MC_nw
set.seed(10)
hlist <- c(0.2)
glist <- c(0.9)
record_hy <- matrix(nrow = length(hlist)*length(glist), ncol = epoch)
for(ep in 1:epoch){
mMSE_HY <- 0
for(r in 1:rounds){
train_label <- simu_norm(para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_un <- simu_norm(para$m, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
result_hy <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
h <- hlist[i]
g <- glist[j]
lambda <- 1 + h^2/g^2
nw_res <- nw_simu(train_label, test, para$n, h, k)
ss_res <- ss_simu(train_label, train_un, test, para$n,h, para$m,g, k)
hy_res <- hy_simu(test, lambda, nw_res$esti$esti_nw, ss_res$esti$esti_ss)
result_hy <- rbind(result_hy, data.frame(mMSE_HY = hy_res$MSE, h, g))
}
}
mMSE_HY <- mMSE_HY + result_hy$mMSE_HY
}
result_hy$mMSE_HY <- mMSE_HY/rounds
record_hy[,ep] <- result_hy$mMSE_HY
}
MCM_hy <- apply(record_hy,1,mean)
MCE_hy <- apply(record_hy,1,sd)
MC_hy <- data.frame(MCM = MCM_hy,MCE = MCE_hy,Lower = MCM_hy - MCE_hy,Upper = MCM_hy + MCE_hy)
MC_hy$h <- result_hy$h
MC_hy$g <- result_hy$g
View(MC_hy)
rounds
MC_nw
MC_hy
para <- paraset_g(128,10/19,rk$value, muk$value)
test <- data.frame(X = 1.5, Y = mx(1.5))
hlist <- seq(0.1,1,0.2)
glist <- seq(0.3,2.4,0.3)
epoch <- 10
rounds <- 20000
set.seed(10)
hlist <- c(0.25)
record_nw <- matrix(nrow = length(hlist), ncol = epoch)
for(ep in 1:epoch){
mMSE_NW <- 0
for(r in 1:rounds){
train_label <- simu_norm(para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_un <- simu_norm(para$m, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
#test <- data[-sample,]
#test <- data.frame(X = 2, Y = mx(2))
result_nw <- data.frame()
for(i in 1:length(hlist)){
h <- hlist[i]
MSE_NW <- nw_simu(train_label, test, para$n, h, k)$MSE
result_nw <- rbind(result_nw, data.frame(mMSE_NW = MSE_NW, h))
}
mMSE_NW <- mMSE_NW + result_nw$mMSE_NW
}
result_nw$mMSE_NW <- mMSE_NW/rounds
record_nw[,ep] <- result_nw$mMSE_NW
}
set.seed(10)
hlist <- c(0.2)
glist <- c(0.9)
record_hy <- matrix(nrow = length(hlist)*length(glist), ncol = epoch)
for(ep in 1:epoch){
mMSE_HY <- 0
for(r in 1:rounds){
train_label <- simu_norm(para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_un <- simu_norm(para$m, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
result_hy <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
h <- hlist[i]
g <- glist[j]
lambda <- 1 + h^2/g^2
nw_res <- nw_simu(train_label, test, para$n, h, k)
ss_res <- ss_simu(train_label, train_un, test, para$n,h, para$m,g, k)
hy_res <- hy_simu(test, lambda, nw_res$esti$esti_nw, ss_res$esti$esti_ss)
result_hy <- rbind(result_hy, data.frame(mMSE_HY = hy_res$MSE, h, g))
}
}
mMSE_HY <- mMSE_HY + result_hy$mMSE_HY
}
result_hy$mMSE_HY <- mMSE_HY/rounds
record_hy[,ep] <- result_hy$mMSE_HY
}
MCM_hy <- apply(record_hy,1,mean)
MCE_hy <- apply(record_hy,1,sd)
MC_hy <- data.frame(MCM = MCM_hy,MCE = MCE_hy,Lower = MCM_hy - MCE_hy,Upper = MCM_hy + MCE_hy)
MC_hy$h <- result_hy$h
MC_hy$g <- result_hy$g
MC_hy
para
set.seed(10)
hlist <- c(0.2)
record_nw <- matrix(nrow = length(hlist), ncol = epoch)
for(ep in 1:epoch){
mMSE_NW <- 0
for(r in 1:rounds){
train_label <- simu_norm(para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_un <- simu_norm(para$m, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
#test <- data[-sample,]
#test <- data.frame(X = 2, Y = mx(2))
result_nw <- data.frame()
for(i in 1:length(hlist)){
h <- hlist[i]
MSE_NW <- nw_simu(train_label, test, para$n, h, k)$MSE
result_nw <- rbind(result_nw, data.frame(mMSE_NW = MSE_NW, h))
}
mMSE_NW <- mMSE_NW + result_nw$mMSE_NW
}
result_nw$mMSE_NW <- mMSE_NW/rounds
record_nw[,ep] <- result_nw$mMSE_NW
}
MCM_nw <- apply(record_nw,1,mean)#MC mean
MCE_nw <- apply(record_nw,1,sd)#MC error
MC_nw <- data.frame(MCM = MCM_nw,MCE = MCE_nw,Lower = MCM_nw - MCE_nw,Upper = MCM_nw + MCE_nw)
MC_nw$h <- result_nw$h
MC_nw
MC_hy
para
knitr::opts_chunk$set(echo = TRUE)
set.seed(10)
hlist <- c(0.25)
glist <- c(0.9)
record_hy <- matrix(nrow = length(hlist)*length(glist), ncol = epoch)
for(ep in 1:epoch){
mMSE_HY <- 0
for(r in 1:rounds){
train_label <- simu_norm(para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_un <- simu_norm(para$m, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
result_hy <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
h <- hlist[i]
g <- glist[j]
lambda <- 1 + h^2/g^2
nw_res <- nw_simu(train_label, test, para$n, h, k)
ss_res <- ss_simu(train_label, train_un, test, para$n,h, para$m,g, k)
hy_res <- hy_simu(test, lambda, nw_res$esti$esti_nw, ss_res$esti$esti_ss)
result_hy <- rbind(result_hy, data.frame(mMSE_HY = hy_res$MSE, h, g))
}
}
mMSE_HY <- mMSE_HY + result_hy$mMSE_HY
}
result_hy$mMSE_HY <- mMSE_HY/rounds
record_hy[,ep] <- result_hy$mMSE_HY
}
MCM_hy <- apply(record_hy,1,mean)
MCE_hy <- apply(record_hy,1,sd)
MC_hy <- data.frame(MCM = MCM_hy,MCE = MCE_hy,Lower = MCM_hy - MCE_hy,Upper = MCM_hy + MCE_hy)
MC_hy$h <- result_hy$h
MC_hy$g <- result_hy$g
MC_hy
set.seed(20)
para <- paraset_g(64,10/19,rk$value, muk$value)
hlist <- c(0.3)
glist <- c(0.9)
type <- 1
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
hy_ci <- function(rounds,para,test,hlist,glist){
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h_opt,test$X,data$X,k)
qx <- px
#h_opt <- nw_1_cv(hlist = seq(0.1,2,0.1),train_label)
h_opt <- nw_cv(hlist = seq(0.1,2,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
para$h <- h
para$g <- g
para$lambda <- 1 + h^2/g^2
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = para$h, g  = para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
coverage_byhg$Error <- abs(coverage_byhg$coverage - 0.95)
return(coverage_byhg)
}
hy_ci_err <- function(rounds,para,test,hlist,glist){
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h_opt,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
sigmaep_esti <- esti_sigmaep(para$n,h_opt,train_label)
#h_opt <- nw_1_cv(hlist = seq(0.1,2,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
para$h <- h
para$g <- g
para$lambda <- 1 + h^2/g^2
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep_esti,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = para$h, g = para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
coverage_byhg$Error <- abs(coverage_byhg$coverage - 0.95)
return(coverage_byhg)
}
Bias_nw <- function(para, train_label, test_x, width, muk){
pesti <- phat(para$n, para$h, test_x ,train_label$X, k)
p1esti <- p_1_esti(para, train_label, test_x, width)
mx1esti <- mx_1_esti(para, train_label, test_x, width)
mx2esti <- mx_2_esti(para, train_label, test_x, width)
bias <- para$h^2 * mx1esti  * p1esti * muk$value / pesti + para$h^2 * mx2esti * muk$value / 2
return(bias)
}
Var_nw <- function(para, train_label, test_x, width, rk, sigmaep_esti){
pesti <- phat(para$n, para$h, test_x ,train_label$X, k)
return(sigmaep_esti^2*rk$value/(para$n*para$h*pesti))
}
CI_nw <- function(level,mx_deriv1,para,train_label,test,sigmaep_esti,px,rk,muk){
var_esti <- Var_nw(para, train_label, test$X, width, rk, sigmaep_esti)
bias_esti <- Bias_nw(para, train_label, test$X, width, muk)
nw_esti <- mhat(para$n, para$h, test$X, train_label$X, train_label$Y, k)
upper <- nw_esti - bias_esti + sqrt(var_esti)*qnorm(1-(1 - level)/2)
lower <- nw_esti - bias_esti - sqrt(var_esti)*qnorm(1-(1 - level)/2)
return(data.frame(n = para$n, h = para$h, g = para$g, lower, upper, esti = nw_esti, sd = sqrt(var_esti), length = (upper - lower), mx_1 = mx_deriv1))
}
nw_ci <- function(rounds,para, test, hlist){
coverage_nw_byhg <- data.frame()
for(h in hlist){
coverage_nw <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_un <- data[(1+para$n):(para$n+para$m),]
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h_opt,test$X,data$X,k)
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
sigmaep_esti <- esti_sigmaep(para$n,h_opt,train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
para$h <- h
coverage_nw <- rbind(coverage_nw,CI_nw(0.95,mx_deriv1,para,train_label,test,sigmaep_esti,px,rk,muk))
}
coverage_nw$cover <- (coverage_nw$lower <= test$Y)*(coverage_nw$upper >= test$Y)
coverage_nw_byhg <- rbind(coverage_nw_byhg,data.frame(h = h,length = mean(coverage_nw$upper - coverage_nw$lower), coverage = mean(coverage_nw$cover,na.rm = T)))
}
coverage_nw_byhg$Error <- abs(coverage_nw_byhg$coverage - 0.95)
return(coverage_nw_byhg)
}
nw_boot_ci <- function(rounds,para, test, hlist){
coverage_nw_byhg <- data.frame()
for(h in hlist){
coverage_nw <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
unlabeled <- data[(1+para$n):(para$n+para$m),]
non_boot <- mhat(para$n,para$h,test$X,train_label$X,train_label$Y,k)
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h_opt,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
labeled <- nw_simu(data[1:para$n,],data[1:para$n,],para$n,h_opt,k)$esti
names(labeled) <- c("X","Y")
error <- data[1:para$n,]$Y - labeled$Y
error <- error - mean(error)
sigmaep_esti <- sd(error)
#esti_nw <- mhat(para$n,para$h,test$X,data[1:para$n,]$X,data[1:para$n,]$Y,k)
boot <- rep(0,1000)
para$h <- h
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- non_boot - mhat(para$n,para$h,test$X,train_label$X,train_label$Y,k)
}
boot_quan <- quantile(boot,c((1-0.95)/2,1-(1-0.95)/2)) + non_boot
coverage_nw <- rbind(coverage_nw,data.frame(lower = boot_quan[1],upper = boot_quan[2]))
}
coverage_nw$cover <- (coverage_nw$lower <= test$Y)*(coverage_nw$upper >= test$Y)
coverage_nw_byhg <- rbind(coverage_nw_byhg,data.frame(h = h,length = mean(coverage_nw$upper - coverage_nw$lower), coverage = mean(coverage_nw$cover,na.rm = T)))
}
coverage_nw_byhg$Error <- abs(coverage_nw_byhg$coverage - 0.95)
return(coverage_nw_byhg)
}
set.seed(20)
para <- paraset_g(64,10/19,rk$value, muk$value)
hlist <- c(0.3)
glist <- c(0.9)
type <- 1
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
library(tidyverse)
library(Deriv)
library(ggplot2)
library(hrbrthemes)
set.seed(20)
para <- paraset_g(64,10/19,rk$value, muk$value)
hlist <- c(0.3)
glist <- c(0.9)
type <- 1
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
set.seed(20)
para <- paraset_g(64,10/19,rk$value, muk$value)
hlist <- c(0.3)
glist <- c(0.9)
rounds <- 150
type <- 1
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
View(coverage_all)
set.seed(20)
para <- paraset_g(64,10/19,rk$value, muk$value)
hlist <- seq(0.2,1,0.2)
glist <- c(0.9)
rounds <- 150
type <- 0
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
set.seed(20)
para <- paraset_g(64,10/19,rk$value, muk$value)
hlist <- c(0.25)
glist <- c(0.9)
rounds <- 150
type <- 0
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
coverage_all
set.seed(20)
para <- paraset_g(128,10/19,rk$value, muk$value)
hlist <- c(0.05)
glist <- c(0.9)
rounds <- 150
type <- 0
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
View(coverage_all)
coverage_all
set.seed(20)
para <- paraset_g(128,10/19,rk$value, muk$value)
hlist <- c(0.20)
glist <- c(0.9)
rounds <- 150
type <- 0
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
coverage_all
para
set.seed(20)
para <- paraset_g(128,10/19,rk$value, muk$value)
hlist <- c(0.25)
glist <- c(0.9)
rounds <- 150
type <- 1
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
coverage_all
set.seed(20)
para <- paraset_g(128,10/19,rk$value, muk$value)
hlist <- c(0.25)
glist <- c(0.9)
rounds <- 150
type <- 2
if(type == 0){
coverage_all <- nw_ci(rounds, para, test, hlist)
#coverage_all <- nw_boot_ci(rounds, para, test, hlist)
}else if(type == 1){
coverage_all <- hy_ci(rounds, para, test, hlist, glist)
}else{
coverage_all <- hy_ci_err(rounds, para, test, hlist, glist)
}
coverage_all
