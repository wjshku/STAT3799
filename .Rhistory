quantile(boot,c(0.05,0.95))[[c(1,2)]]
coverage_nw <- data.frame()
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
qx <- px
labeled <- nw_simu(data[1:para$n,],data[1:para$n,],para$n,h_opt,k)$esti
names(labeled) <- c("X","Y")
error <- labeled$Y - data[1:para$n,]$Y
error <- error - mean(error)
unlabeled <- data[(1+para$n):(para$n+para$m),]
boot <- rep(0,100)
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- mhat(para$n,para$h,test$X,train_label$X,train_label$Y,k)
}
coverage_nw <- rbind(coverage_nw,quantile(boot,c(0.05,0.95)))
View(coverage_nw)
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
coverage_nw <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
labeled <- nw_simu(data[1:para$n,],data[1:para$n,],para$n,h_opt,k)$esti
names(labeled) <- c("X","Y")
error <- labeled$Y - data[1:para$n,]$Y
error <- error - mean(error)
unlabeled <- data[(1+para$n):(para$n+para$m),]
sigmaep_esti <- sqrt(sd(error))
boot <- rep(0,100)
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- mhat(para$n,para$h,test$X,train_label$X,train_label$Y,k)
}
coverage_nw <- rbind(coverage_nw,quantile(boot,c(0.05,0.95)))
}
data.frame(quantile(boot,c(0.05,0.95)))
boot_quan <- quantile(boot,c(0.05,0.95))
boot_quan <- quantile(boot,c((1-0.95)/2,1-(1-0.95)/2))
boot_quan
test
mhat(para$n,para$h,test$X,data[1:para$n,]$X,data[1:para$n,]$Y,k)
boot
mean(boot)
sd(boot)
esti_nw + sd(boot)*1.96
esti_nw <- mhat(para$n,para$h,test$X,data[1:para$n,]$X,data[1:para$n,]$Y,k)
esti_nw + sd(boot)*1.96
boot <- rep(0,1000)
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- mhat(para$n,para$h,test$X,train_label$X,train_label$Y,k)
}
mean(boot)
quantile(boot,c((1-0.95)/2,1-(1-0.95)/2))
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
coverage_nw <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
labeled <- nw_simu(data[1:para$n,],data[1:para$n,],para$n,h_opt,k)$esti
names(labeled) <- c("X","Y")
error <- labeled$Y - data[1:para$n,]$Y
error <- error - mean(error)
unlabeled <- data[(1+para$n):(para$n+para$m),]
sigmaep_esti <- sqrt(sd(error))
#esti_nw <- mhat(para$n,para$h,test$X,data[1:para$n,]$X,data[1:para$n,]$Y,k)
boot <- rep(0,1000)
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- mhat(para$n,para$h,test$X,train_label$X,train_label$Y,k)
}
boot_quan <- quantile(boot,c((1-0.95)/2,1-(1-0.95)/2))
coverage_nw <- rbind(coverage_nw,data.frame(h = para$h,g = para$g,lower = boot_quan[1],upper = boot_quan[2]))
}
names(coverage_nw) <- c("lower","upper")
coverage_nw$cover <- (coverage_nw$lower <= test$Y)*(coverage_nw$upper >= test$Y)
mean(coverage_nw$cover,na.rm = T)
View(coverage_nw)
names(coverage_nw)<-c("h",'g','lower','upper')
coverage_nw$cover <- (coverage_nw$lower <= test$Y)*(coverage_nw$upper >= test$Y)
mean(coverage_nw$cover,na.rm = T)
esti_var <- function(n, h, m, g, mx_deriv1, sigmaep, px, qx, rk, sigmak, E_H_ratio = 1){
var <- 1/(n*h*px)*sigmaep^2*rk + (h^4)/(m*g^3*qx)*E_H_ratio*mx_deriv1^2*sigmak
return(var)
}
CI <- function(level,mx_deriv1,para,train_label,train_un,test,sigmaep_esti,px,qx,rk,sigmak,E_H_ratio = 1){
var_esti <- esti_var(para$n,para$h,para$m,para$g,mx_deriv1,sigmaep_esti,px,qx,rk,sigmak,E_H_ratio = E_H_ratio)
lambda <- 1 + h^2/g^2
nw_esti <- mhat(para$n, para$h, test$X, train_label$X, train_label$Y, k)
ss_esti <- rhat(para$n, para$h, test$X, train_label$X, train_label$Y, k, para$m, para$g, train_un$X)
hy_esti <- hy_simu(test, lambda, nw_esti, ss_esti)$esti$esti_hy
#browser()
upper <- hy_esti + sqrt(var_esti)*qnorm(1-(1 - level)/2)
lower <- hy_esti - sqrt(var_esti)*qnorm(1-(1 - level)/2)
return(data.frame(n = para$n, h = para$h, g = para$g, lower, upper, esti = hy_esti, sd = sqrt(var_esti), length = (upper - lower), mx_1 = mx_deriv1))
}
coverage$length <- coverage$upper - coverage$lower
mean(coverage$length)
coverage_nw$length <- coverage_nw$upper - coverage_nw$lower
mean(coverage_nw$length)
mean(coverage$cover,na.rm = T)
mean(coverage_nw$cover,na.rm = T)
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
nw_ci <- function(rounds,para, test, hlist){
coverage_nw <- data.frame()
coverage_nw_byhg <- data.frame()
for(h in hlist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
labeled <- nw_simu(data[1:para$n,],data[1:para$n,],para$n,h_opt,k)$esti
names(labeled) <- c("X","Y")
error <- labeled$Y - data[1:para$n,]$Y
error <- error - mean(error)
unlabeled <- data[(1+para$n):(para$n+para$m),]
sigmaep_esti <- sqrt(sd(error))
#esti_nw <- mhat(para$n,para$h,test$X,data[1:para$n,]$X,data[1:para$n,]$Y,k)
boot <- rep(0,1000)
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- mhat(para$n,h,test$X,train_label$X,train_label$Y,k)
}
boot_quan <- quantile(boot,c((1-0.95)/2,1-(1-0.95)/2))
coverage_nw <- rbind(coverage_nw,data.frame(lower = boot_quan[1],upper = boot_quan[2]))
}
coverage_nw$cover <- (coverage_nw$lower <= test$Y)*(coverage_nw$upper >= test$Y)
coverage_nw_byhg <- rbind(coverage_nw_byhg,data.frame(h = h,length = mean(coverage_nw$upper - coverage_nw$lower), coverage = mean(coverage_nw$cover,na.rm = T)))
}
}
nw_ci(rounds,para,test,c(0.3))
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
nw_ci <- function(rounds,para, test, hlist){
coverage_nw <- data.frame()
coverage_nw_byhg <- data.frame()
for(h in hlist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
labeled <- nw_simu(data[1:para$n,],data[1:para$n,],para$n,h_opt,k)$esti
names(labeled) <- c("X","Y")
error <- labeled$Y - data[1:para$n,]$Y
error <- error - mean(error)
unlabeled <- data[(1+para$n):(para$n+para$m),]
sigmaep_esti <- sqrt(sd(error))
#esti_nw <- mhat(para$n,para$h,test$X,data[1:para$n,]$X,data[1:para$n,]$Y,k)
boot <- rep(0,1000)
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- mhat(para$n,h,test$X,train_label$X,train_label$Y,k)
}
boot_quan <- quantile(boot,c((1-0.95)/2,1-(1-0.95)/2))
coverage_nw <- rbind(coverage_nw,data.frame(lower = boot_quan[1],upper = boot_quan[2]))
}
coverage_nw$cover <- (coverage_nw$lower <= test$Y)*(coverage_nw$upper >= test$Y)
coverage_nw_byhg <- rbind(coverage_nw_byhg,data.frame(h = h,length = mean(coverage_nw$upper - coverage_nw$lower), coverage = mean(coverage_nw$cover,na.rm = T)))
}
return(coverage_nw_byhg)
}
nw_ci(rounds,para,test,c(0.3))
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci <- function(rounds,para,test,hlist,glist){
coverage <- data.frame()
for(h in hlist){
for(g in glist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = h,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
hy_ci(rounds, para, test,c(0.3),c(0.9))
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci <- function(rounds,para,test,hlist,glist){
coverage <- data.frame()
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = h,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
hy_ci(rounds, para, test,c(0.3),c(0.9))
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci_err <- function(rounds,para,test,hlist,glist){
coverage <- data.frame()
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
sigmaep_esti <- esti_error(para$n,h_opt,train_label)
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep_esti,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = h,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci_err <- function(rounds,para,test,hlist,glist){
coverage <- data.frame()
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
sigmaep_esti <- esti_error(para$n,h_opt,train_label)
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep_esti,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = h,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
hy_ci_err(rounds, para, test,c(0.3),c(0.9))
para
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci <- function(rounds,para,test,hlist,glist){
coverage <- data.frame()
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
para$h <- h
para$g <- g
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = para$h, para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
hy_ci(rounds, para, test,c(0.3),c(0.9))
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci_err <- function(rounds,para,test,hlist,glist){
coverage <- data.frame()
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
sigmaep_esti <- esti_error(para$n,h_opt,train_label)
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
para$h <- h
para$g <- g
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep_esti,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = para$h, g = para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
hy_ci_err(rounds, para, test,c(0.3),c(0.9))
View(result_ci)
hy_ci_err(rounds, para, test,c(0.1),c(0.3))
hy_ci_err(rounds, para, test,c(0.1,0.4),c(0.3,0.9))
coverage_byhg
coverage
data.frame(h = para$h, g = para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T))
hy_ci_err(rounds, para, test,c(0.1,0.4),c(0.3))
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci <- function(rounds,para,test,hlist,glist){
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
para$h <- h
para$g <- g
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = para$h, para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
nw_ci <- function(rounds,para, test, hlist){
coverage_nw_byhg <- data.frame()
for(h in hlist){
coverage_nw <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
h <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
labeled <- nw_simu(data[1:para$n,],data[1:para$n,],para$n,h_opt,k)$esti
names(labeled) <- c("X","Y")
error <- labeled$Y - data[1:para$n,]$Y
error <- error - mean(error)
unlabeled <- data[(1+para$n):(para$n+para$m),]
sigmaep_esti <- sqrt(sd(error))
#esti_nw <- mhat(para$n,para$h,test$X,data[1:para$n,]$X,data[1:para$n,]$Y,k)
boot <- rep(0,1000)
for(ep in 1:length(boot)){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
boot[ep] <- mhat(para$n,h,test$X,train_label$X,train_label$Y,k)
}
boot_quan <- quantile(boot,c((1-0.95)/2,1-(1-0.95)/2))
coverage_nw <- rbind(coverage_nw,data.frame(lower = boot_quan[1],upper = boot_quan[2]))
}
coverage_nw$cover <- (coverage_nw$lower <= test$Y)*(coverage_nw$upper >= test$Y)
coverage_nw_byhg <- rbind(coverage_nw_byhg,data.frame(h = h,length = mean(coverage_nw$upper - coverage_nw$lower), coverage = mean(coverage_nw$cover,na.rm = T)))
}
return(coverage_nw_byhg)
}
set.seed(10)
rounds <- 50
para$h <- 0.3 #result_hy$h[HY_opt]
para$g <- 0.9 # result_hy$g[HY_opt]
test <- data.frame(X = 1, Y = mx(1))
hy_ci_err <- function(rounds,para,test,hlist,glist){
coverage_byhg <- data.frame()
for(h in hlist){
for(g in glist){
coverage <- data.frame()
for(i in 1:rounds){
data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)
train_label <- data[1:para$n,]
train_label <- arrange(train_label, X)
train_un <- data[(1+para$n):(para$m+para$n),]
h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)
px <- phat(para$n,h,test$X,data$X,k)
qx <- px
h_opt <- nw_cv(hlist = seq(0.1,4,0.1),train_label)
sigmaep_esti <- esti_error(para$n,h_opt,train_label)
h_opt <- nw_1_cv(hlist = seq(0.1,4,0.1),train_label)
mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)
para$h <- h
para$g <- g
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep_esti,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))
}
coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
coverage_byhg <- rbind(coverage_byhg,data.frame(h = para$h, g = para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))
}
}
return(coverage_byhg)
}
hlist <- c(0.1,0.4)
glist <- c(0.3,0.9)
hy_ci_err(rounds, para, test, hlist, glist)
(8*pi^(1/2)/3)^(1/5)*sd(train_label$X)*(rk$value/muk$value^2/para$m)^(1/5)
(1-0.95)/2
quantile(boot,c((1-0.95)/2,1-(1-0.95)/2))
hlist <- seq(0.1,1,0.1)
glist <- seq(0.3,3,0.3)
rounds <- 150
coverage <- data.frame()
result_ci <- data.frame()
for(i in 1:length(hlist)){
for(j in 1:length(glist)){
coverage <- data.frame()
set.seed(10)
for(exp in 1:rounds){
train_label <- labeled
train_label$Y <- train_label$Y + error[sample(1:length(error), para$n,replace = T)]
para$h <- hlist[i]
para$g <- glist[j]
coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,px,qx,sigmaep_esti,rk$value,sigmak$value))
}
cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)
cover_prop <- mean(cover,na.rm = T)
result_ci <- rbind(result_ci, data.frame(h = para$h, g = para$g, cover_prop, sd = sqrt(mean(coverage$sd^2))))
}
}
result_ci$error <- abs(result_ci$cover_prop - 0.95)
h_opt_esti(para,train_label,train_un,test,sigmaep_esti,rk,sigmak)
para$g <- (8*pi^(1/2)/3)^(1/5)*sd(train_label$X)*(rk$value/muk$value^2/para$m)^(1/5)
h_opt_esti(para,train_label,train_un,test,sigmaep_esti,rk,sigmak)
