"0","set.seed(30)"
"0","coverage <- data.frame()"
"0","for(i in 1:rounds){"
"0","  data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)"
"0",""
"0","  train_label <- data[1:para$n,]"
"0","  #train_label <- arrange(train_label, X)"
"0","  train_un <- data[(1+para$n):(para$m+para$n),]"
"0","  "
"0","  h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)"
"0","  px <- phat(para$n,h_opt,test$X,data$X,k)"
"0","  qx <- px"
"0","  "
"0","  h_opt <- nw_cv(hlist = seq(0.1,2,0.1),train_label)"
"0","  sigmaep_esti <- esti_error(para$n,h_opt,train_label)"
"0","  "
"0","  #h_opt <- nw_1_cv(hlist = seq(0.1,2,0.1),train_label)"
"0","  mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)"
"0","  #mx_deriv1 <- 3"
"0","  "
"0","  hg_opt <- hg_optsearch(para, train_label, test, width = 0.01)"
"0","  "
"0","  para$h <- hg_opt[1]"
"0","  #para$h <- h_opt"
"0","  para$g <- hg_opt[2]"
"0","  para$lambda <- 1 + para$h^2/para$g^2"
"0","  "
"0","  coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep_esti,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))"
"0","}"
"0","      coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)"
"0","      mean(coverage$cover)"
"1","[1]"
"1"," 0.56"
"1","
"
