"0","hy_ci <- function(rounds,para,test,hlist,glist){"
"0","  coverage_byhg <- data.frame()"
"0",""
"0","  for(h in hlist){"
"0","    for(g in glist){"
"0","      coverage <- data.frame()"
"0","      for(i in 1:rounds){"
"0","        data <- simu_norm(para$m + para$n, 1, meanx = 0, sigmax = sigmax, sigmaep = sigmaep)"
"0","      "
"0","        train_label <- data[1:para$n,]"
"0","        train_label <- arrange(train_label, X)"
"0","        train_un <- data[(1+para$n):(para$m+para$n),]"
"0","        h_opt <- (8*pi^(1/2)/3)^(1/5)*sd(data$X)*(rk$value/muk$value^2/para$n)^(1/5)"
"0","        qx <- px"
"0","        h_opt <- nw_1_cv(hlist = seq(0.1,2,0.1),train_label)"
"0","        mx_deriv1 <- mhat_1(para$n,h_opt,test$X,train_label$X,train_label$Y,k,k_1)"
"0","        "
"0","        "
"0","        para$h <- h"
"0","        para$g <- g"
"0","        coverage <- rbind(coverage,CI(0.95,mx_deriv1,para,train_label,train_un,test,sigmaep_esti = sigmaep,px = px,qx = qx,rk$value,sigmak$value,E_H_ratio = 1))"
"0","      }"
"0","      coverage$cover <- (coverage$lower <= test$Y)*(coverage$upper >= test$Y)"
"0","        "
"0","      coverage_byhg <- rbind(coverage_byhg,data.frame(h = para$h, g  = para$g,length = mean(coverage$upper - coverage$lower), coverage = mean(coverage$cover,na.rm = T)))"
"0","    }"
"0","  }"
"0",""
"0","return(coverage_byhg)"
"0","}"
